'use strict';

// 1. Создайте массив, состоящий из 8 сгенерированных JS объектов, которые будут описывать похожие объявления неподалёку. Структура объектов должна быть следующей:

// {
//   "author": {
//     "avatar": строка, адрес изображения вида img/avatars/user{{xx}}.png, где {{xx}} это число от 1 до 8 с ведущим нулём. Например, 01, 02 и т. д. Адреса изображений не повторяются
//   },
//   "offer": {
//     "type": строка с одним из четырёх фиксированных значений: palace, flat, house или bungalo
//   },

//   "location": {
//     "x": случайное число, координата x метки на карте. Значение ограничено размерами блока, в котором перетаскивается метка.
//     "y": случайное число, координата y метки на карте от 130 до 630.
//   }
// }




// 2. У блока .map уберите класс .map--faded.
var mapBlock = document.querySelector('.map');
mapBlock.classList.remove('map--faded');

// Это временное решение, этот класс переключает карту из неактивного состояния в активное.
// В последующих заданиях, в соответствии с ТЗ вы будете переключать режимы страницы: неактивный, в котором карта и форма заблокированы и активный режим,
// в котором производится ввод данных и просмотр похожих объявлений. Сейчас для тестирования функции генерации похожих объявлений мы временно сымитируем активный режим,
// а в последующих разделах запрограммируем его полностью.

// 3. На основе данных, созданных в первом пункте, создайте DOM-элементы, соответствующие меткам на карте, и заполните их данными из массива.
// Итоговую разметку метки .map__pin можно взять из шаблона #pin.

// У метки должны быть следующие данные:
// Координаты: style="left: {{location.x}}px; top: {{location.y}}px;"
// src="{{author.avatar}}"
// alt="{{заголовок объявления}}"
// Обратите внимание. Координаты X и Y, которые вы вставите в разметку, это не координаты левого верхнего угла блока метки,
// а координаты, на которые указывает метка своим острым концом.
// Чтобы найти эту координату нужно учесть размеры элемента с меткой.

// 4. Отрисуйте сгенерированные DOM-элементы в блок .map__pins. Для вставки элементов используйте DocumentFragment.


// Требования к коду
// Код должен быть разделён на отдельные функции.
// Стоит отдельно объявить функцию генерации случайных данных,
// функцию создания DOM-элемента на основе JS-объекта,
// функцию заполнения блока DOM-элементами на основе массива JS-объектов.
// Пункты задания примерно соответствуют функциям, которые вы должны создать.
